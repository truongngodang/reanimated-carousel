{"version":3,"sources":["useCarouselController.tsx"],"names":["React","useRef","Easing","runOnJS","useAnimatedReaction","useSharedValue","dealWithAnimation","convertToSharedIndex","round","useCarouselController","options","size","data","loop","handlerOffsetX","withAnimation","defaultIndex","duration","autoFillData","dataInfo","useMemo","length","disable","originalLength","index","sharedIndex","sharedPreIndex","currentFixedPage","useCallback","Math","value","fixed","abs","setSharedIndex","newSharedIndex","current","handlerOffsetXValue","toInt","isPositive","i","newSharedIndexValue","rawDataLength","getCurrentIndex","canSliding","onScrollEnd","onScrollBegin","scrollWithTiming","toValue","onFinished","callback","isFinished","defaultWithAnimation","type","config","easing","easeOutQuart","next","opts","count","animated","nextPage","prev","prevPage","to","offset","scrollTo","n","getSharedIndex"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport type Animated from 'react-native-reanimated';\nimport { Easing } from '../constants';\nimport {\n    runOnJS,\n    useAnimatedReaction,\n    useSharedValue,\n} from 'react-native-reanimated';\nimport type {\n    TCarouselActionOptions,\n    TCarouselProps,\n    WithTimingAnimation,\n} from '../types';\nimport { dealWithAnimation } from '@/utils/dealWithAnimation';\nimport { convertToSharedIndex } from '@/utils/computedWithAutoFillData';\nimport { round } from '@/utils/log';\n\ninterface IOpts {\n    loop: boolean;\n    size: number;\n    data: TCarouselProps['data'];\n    autoFillData: TCarouselProps['autoFillData'];\n    handlerOffsetX: Animated.SharedValue<number>;\n    withAnimation?: TCarouselProps['withAnimation'];\n    duration?: number;\n    defaultIndex?: number;\n    onScrollBegin?: () => void;\n    onScrollEnd?: () => void;\n}\n\nexport interface ICarouselController {\n    getSharedIndex: () => number;\n    prev: (opts?: TCarouselActionOptions) => void;\n    next: (opts?: TCarouselActionOptions) => void;\n    getCurrentIndex: () => number;\n    scrollTo: (opts?: TCarouselActionOptions) => void;\n}\n\nexport function useCarouselController(options: IOpts): ICarouselController {\n    const {\n        size,\n        data,\n        loop,\n        handlerOffsetX,\n        withAnimation,\n        defaultIndex = 0,\n        duration,\n        autoFillData,\n    } = options;\n\n    const dataInfo = React.useMemo(\n        () => ({\n            length: data.length,\n            disable: !data.length,\n            originalLength: data.length,\n        }),\n        [data]\n    );\n\n    const index = useSharedValue<number>(defaultIndex);\n    // The Index displayed to the user\n    const sharedIndex = useRef<number>(defaultIndex);\n    const sharedPreIndex = useRef<number>(defaultIndex);\n\n    const currentFixedPage = React.useCallback(() => {\n        if (loop) {\n            return -Math.round(handlerOffsetX.value / size);\n        }\n\n        const fixed = (handlerOffsetX.value / size) % dataInfo.length;\n        return Math.round(\n            handlerOffsetX.value <= 0\n                ? Math.abs(fixed)\n                : Math.abs(fixed > 0 ? dataInfo.length - fixed : 0)\n        );\n    }, [handlerOffsetX, dataInfo, size, loop]);\n\n    function setSharedIndex(newSharedIndex: number) {\n        sharedIndex.current = newSharedIndex;\n    }\n\n    useAnimatedReaction(\n        () => {\n            const handlerOffsetXValue = handlerOffsetX.value;\n            const toInt = round(handlerOffsetXValue / size) % dataInfo.length;\n            const isPositive = handlerOffsetXValue <= 0;\n            const i = isPositive\n                ? Math.abs(toInt)\n                : Math.abs(toInt > 0 ? dataInfo.length - toInt : 0);\n\n            const newSharedIndexValue = convertToSharedIndex({\n                loop,\n                rawDataLength: dataInfo.originalLength,\n                autoFillData: autoFillData!,\n                index: i,\n            });\n\n            return {\n                i,\n                newSharedIndexValue,\n            };\n        },\n        ({ i, newSharedIndexValue }) => {\n            index.value = i;\n            runOnJS(setSharedIndex)(newSharedIndexValue);\n        },\n        [\n            sharedPreIndex,\n            sharedIndex,\n            size,\n            dataInfo,\n            index,\n            loop,\n            autoFillData,\n            handlerOffsetX,\n        ]\n    );\n\n    const getCurrentIndex = React.useCallback(() => {\n        return index.value;\n    }, [index]);\n\n    const canSliding = React.useCallback(() => {\n        return !dataInfo.disable;\n    }, [dataInfo]);\n\n    const onScrollEnd = React.useCallback(() => {\n        options.onScrollEnd?.();\n    }, [options]);\n\n    const onScrollBegin = React.useCallback(() => {\n        options.onScrollBegin?.();\n    }, [options]);\n\n    const scrollWithTiming = React.useCallback(\n        (toValue: number, onFinished?: () => void) => {\n            'worklet';\n            const callback = (isFinished: boolean) => {\n                'worklet';\n                if (isFinished) {\n                    runOnJS(onScrollEnd)();\n                    onFinished && runOnJS(onFinished)();\n                }\n            };\n\n            const defaultWithAnimation: WithTimingAnimation = {\n                type: 'timing',\n                config: { duration, easing: Easing.easeOutQuart },\n            };\n\n            return dealWithAnimation(withAnimation ?? defaultWithAnimation)(\n                toValue,\n                callback\n            );\n        },\n        [duration, withAnimation, onScrollEnd]\n    );\n\n    const next = React.useCallback(\n        (opts: TCarouselActionOptions = {}) => {\n            'worklet';\n            const { count = 1, animated = true, onFinished } = opts;\n            if (!canSliding() || (!loop && index.value >= dataInfo.length - 1))\n                return;\n\n            onScrollBegin?.();\n\n            const nextPage = currentFixedPage() + count;\n            index.value = nextPage;\n\n            if (animated) {\n                handlerOffsetX.value = scrollWithTiming(\n                    -nextPage * size,\n                    onFinished\n                ) as any;\n            } else {\n                handlerOffsetX.value = -nextPage * size;\n                onFinished?.();\n            }\n        },\n        [\n            canSliding,\n            loop,\n            index,\n            dataInfo,\n            onScrollBegin,\n            handlerOffsetX,\n            size,\n            scrollWithTiming,\n            currentFixedPage,\n        ]\n    );\n\n    const prev = React.useCallback(\n        (opts: TCarouselActionOptions = {}) => {\n            const { count = 1, animated = true, onFinished } = opts;\n            if (!canSliding() || (!loop && index.value <= 0)) return;\n\n            onScrollBegin?.();\n\n            const prevPage = currentFixedPage() - count;\n            index.value = prevPage;\n\n            if (animated) {\n                handlerOffsetX.value = scrollWithTiming(\n                    -prevPage * size,\n                    onFinished\n                );\n            } else {\n                handlerOffsetX.value = -prevPage * size;\n                onFinished?.();\n            }\n        },\n        [\n            canSliding,\n            loop,\n            index,\n            onScrollBegin,\n            handlerOffsetX,\n            size,\n            scrollWithTiming,\n            currentFixedPage,\n        ]\n    );\n\n    const to = React.useCallback(\n        (opts: { i: number; animated: boolean; onFinished?: () => void }) => {\n            const { i, animated = false, onFinished } = opts;\n            if (i === index.value) return;\n            if (!canSliding()) return;\n\n            onScrollBegin?.();\n\n            const offset = handlerOffsetX.value + (index.value - i) * size;\n\n            if (animated) {\n                index.value = i;\n                handlerOffsetX.value = scrollWithTiming(offset, onFinished);\n            } else {\n                handlerOffsetX.value = offset;\n                index.value = i;\n                onFinished?.();\n            }\n        },\n        [\n            index,\n            canSliding,\n            onScrollBegin,\n            handlerOffsetX,\n            size,\n            scrollWithTiming,\n        ]\n    );\n\n    const scrollTo = React.useCallback(\n        (opts: TCarouselActionOptions = {}) => {\n            const { index: i, count, animated = false, onFinished } = opts;\n\n            if (typeof i === 'number' && i > -1) {\n                to({ i, animated, onFinished });\n                return;\n            }\n\n            if (!count) {\n                return;\n            }\n\n            const n = Math.round(count);\n\n            if (n < 0) {\n                prev({ count: Math.abs(n), animated, onFinished });\n            } else {\n                next({ count: n, animated, onFinished });\n            }\n        },\n        [prev, next, to]\n    );\n\n    return {\n        next,\n        prev,\n        scrollTo,\n        getCurrentIndex,\n        getSharedIndex: () => sharedIndex.current,\n    };\n}\n"]}