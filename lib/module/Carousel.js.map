{"version":3,"sources":["Carousel.tsx"],"names":["React","Animated","runOnJS","useDerivedValue","useCarouselController","useAutoPlay","usePropsErrorBoundary","ScrollViewGesture","useVisibleRanges","StyleSheet","View","BaseLayout","useLayoutConfig","useInitProps","CTX","useCommonVariables","useOnProgressChange","computedRealIndexWithAutoFillData","Carousel","forwardRef","_props","ref","props","testID","data","rawData","loop","autoFillData","mode","style","width","height","vertical","autoPlay","windowSize","autoPlayReverse","autoPlayInterval","scrollAnimationDuration","withAnimation","renderItem","onScrollEnd","onSnapToItem","onScrollBegin","onProgressChange","customAnimation","defaultIndex","commonVariables","size","handlerOffsetX","dataLength","length","offsetX","totalSize","x","value","isNaN","carouselController","_onScrollEnd","duration","next","prev","scrollTo","getSharedIndex","getCurrentIndex","start","startAutoPlay","pause","pauseAutoPlay","useCallback","_sharedIndex","Math","round","realIndex","index","scrollViewGestureOnScrollBegin","scrollViewGestureOnScrollEnd","scrollViewGestureOnTouchBegin","scrollViewGestureOnTouchEnd","useImperativeHandle","visibleRanges","total","viewSize","translation","layoutConfig","renderLayout","item","i","animationValue","common","styles","container","itemsVertical","itemsHorizontal","map","create","overflow","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Animated, { runOnJS, useDerivedValue } from 'react-native-reanimated';\n\nimport { useCarouselController } from './hooks/useCarouselController';\nimport { useAutoPlay } from './hooks/useAutoPlay';\nimport { usePropsErrorBoundary } from './hooks/usePropsErrorBoundary';\nimport { ScrollViewGesture } from './ScrollViewGesture';\nimport { useVisibleRanges } from './hooks/useVisibleRanges';\n\nimport type { ICarouselInstance, TCarouselProps } from './types';\nimport { StyleSheet, View } from 'react-native';\nimport { BaseLayout } from './layouts/BaseLayout';\nimport { useLayoutConfig } from './hooks/useLayoutConfig';\nimport { useInitProps } from './hooks/useInitProps';\nimport { CTX } from './store';\nimport { useCommonVariables } from './hooks/useCommonVariables';\nimport { useOnProgressChange } from './hooks/useOnProgressChange';\nimport { computedRealIndexWithAutoFillData } from './utils/computedWithAutoFillData';\n\nconst Carousel = React.forwardRef<ICarouselInstance, TCarouselProps<any>>(\n    (_props, ref) => {\n        const props = useInitProps(_props);\n\n        const {\n            testID,\n            data,\n            rawData,\n            loop,\n            autoFillData,\n            mode,\n            style,\n            width,\n            height,\n            vertical,\n            autoPlay,\n            windowSize,\n            autoPlayReverse,\n            autoPlayInterval,\n            scrollAnimationDuration,\n            withAnimation,\n            renderItem,\n            onScrollEnd,\n            onSnapToItem,\n            onScrollBegin,\n            onProgressChange,\n            customAnimation,\n            defaultIndex,\n        } = props;\n\n        const commonVariables = useCommonVariables(props);\n        const { size, handlerOffsetX } = commonVariables;\n        const dataLength = data.length;\n\n        const offsetX = useDerivedValue(() => {\n            const totalSize = size * dataLength;\n            const x = handlerOffsetX.value % totalSize;\n\n            if (!loop) {\n                return handlerOffsetX.value;\n            }\n            return isNaN(x) ? 0 : x;\n        }, [loop, size, dataLength]);\n\n        usePropsErrorBoundary(props);\n        useOnProgressChange({\n            autoFillData,\n            loop,\n            size,\n            offsetX,\n            rawData,\n            onProgressChange,\n        });\n\n        const carouselController = useCarouselController({\n            loop,\n            size,\n            data,\n            autoFillData,\n            handlerOffsetX,\n            withAnimation,\n            defaultIndex,\n            onScrollEnd: () => runOnJS(_onScrollEnd)(),\n            onScrollBegin: () => !!onScrollBegin && runOnJS(onScrollBegin)(),\n            duration: scrollAnimationDuration,\n        });\n\n        const { next, prev, scrollTo, getSharedIndex, getCurrentIndex } =\n            carouselController;\n\n        const { start: startAutoPlay, pause: pauseAutoPlay } = useAutoPlay({\n            autoPlay,\n            autoPlayInterval,\n            autoPlayReverse,\n            carouselController,\n        });\n\n        const _onScrollEnd = React.useCallback(() => {\n            const _sharedIndex = Math.round(getSharedIndex());\n\n            const realIndex = computedRealIndexWithAutoFillData({\n                index: _sharedIndex,\n                dataLength: rawData.length,\n                loop,\n                autoFillData,\n            });\n\n            if (onSnapToItem) {\n                onSnapToItem(realIndex);\n            }\n            if (onScrollEnd) {\n                onScrollEnd(realIndex);\n            }\n        }, [\n            loop,\n            autoFillData,\n            rawData.length,\n            getSharedIndex,\n            onSnapToItem,\n            onScrollEnd,\n        ]);\n\n        const scrollViewGestureOnScrollBegin = React.useCallback(() => {\n            pauseAutoPlay();\n            onScrollBegin?.();\n        }, [onScrollBegin, pauseAutoPlay]);\n\n        const scrollViewGestureOnScrollEnd = React.useCallback(() => {\n            startAutoPlay();\n            _onScrollEnd();\n        }, [_onScrollEnd, startAutoPlay]);\n\n        const scrollViewGestureOnTouchBegin = React.useCallback(pauseAutoPlay, [\n            pauseAutoPlay,\n        ]);\n\n        const scrollViewGestureOnTouchEnd = React.useCallback(startAutoPlay, [\n            startAutoPlay,\n        ]);\n\n        React.useImperativeHandle(\n            ref,\n            () => ({\n                next,\n                prev,\n                getCurrentIndex,\n                scrollTo,\n            }),\n            [getCurrentIndex, next, prev, scrollTo]\n        );\n\n        const visibleRanges = useVisibleRanges({\n            total: data.length,\n            viewSize: size,\n            translation: handlerOffsetX,\n            windowSize,\n        });\n\n        const layoutConfig = useLayoutConfig({ ...props, size });\n\n        const renderLayout = React.useCallback(\n            (item: any, i: number) => {\n                const realIndex = computedRealIndexWithAutoFillData({\n                    index: i,\n                    dataLength: rawData.length,\n                    loop,\n                    autoFillData,\n                });\n\n                return (\n                    <BaseLayout\n                        key={i}\n                        index={i}\n                        handlerOffsetX={offsetX}\n                        visibleRanges={visibleRanges}\n                        animationStyle={customAnimation || layoutConfig}\n                    >\n                        {({ animationValue }) =>\n                            renderItem({\n                                item,\n                                index: realIndex,\n                                animationValue,\n                            })\n                        }\n                    </BaseLayout>\n                );\n            },\n            [\n                loop,\n                rawData,\n                offsetX,\n                visibleRanges,\n                autoFillData,\n                renderItem,\n                layoutConfig,\n                customAnimation,\n            ]\n        );\n\n        return (\n            <CTX.Provider value={{ props, common: commonVariables }}>\n                <View\n                    style={[\n                        styles.container,\n                        { width: width || '100%', height: height || '100%' },\n                        style,\n                    ]}\n                    testID={testID}\n                >\n                    <ScrollViewGesture\n                        size={size}\n                        translation={handlerOffsetX}\n                        onScrollBegin={scrollViewGestureOnScrollBegin}\n                        onScrollEnd={scrollViewGestureOnScrollEnd}\n                        onTouchBegin={scrollViewGestureOnTouchBegin}\n                        onTouchEnd={scrollViewGestureOnTouchEnd}\n                    >\n                        <Animated.View\n                            key={mode}\n                            style={[\n                                styles.container,\n                                {\n                                    width: width || '100%',\n                                    height: height || '100%',\n                                },\n                                style,\n                                vertical\n                                    ? styles.itemsVertical\n                                    : styles.itemsHorizontal,\n                            ]}\n                        >\n                            {data.map(renderLayout)}\n                        </Animated.View>\n                    </ScrollViewGesture>\n                </View>\n            </CTX.Provider>\n        );\n    }\n);\n\nexport default Carousel as <T extends any>(\n    props: React.PropsWithChildren<TCarouselProps<T>>\n) => React.ReactElement;\n\nconst styles = StyleSheet.create({\n    container: {\n        overflow: 'hidden',\n    },\n    itemsHorizontal: {\n        flexDirection: 'row',\n    },\n    itemsVertical: {\n        flexDirection: 'column',\n    },\n});\n"]}