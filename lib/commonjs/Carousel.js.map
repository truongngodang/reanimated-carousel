{"version":3,"sources":["Carousel.tsx"],"names":["Carousel","React","forwardRef","_props","ref","props","testID","data","rawData","loop","autoFillData","mode","style","width","height","vertical","autoPlay","windowSize","autoPlayReverse","autoPlayInterval","scrollAnimationDuration","withAnimation","renderItem","onScrollEnd","onSnapToItem","onScrollBegin","onProgressChange","customAnimation","defaultIndex","commonVariables","size","handlerOffsetX","dataLength","length","offsetX","totalSize","x","value","isNaN","carouselController","_onScrollEnd","duration","next","prev","scrollTo","getSharedIndex","getCurrentIndex","startAutoPlay","start","pauseAutoPlay","pause","useCallback","_sharedIndex","Math","round","realIndex","index","scrollViewGestureOnScrollBegin","scrollViewGestureOnScrollEnd","scrollViewGestureOnTouchBegin","scrollViewGestureOnTouchEnd","useImperativeHandle","visibleRanges","total","viewSize","translation","layoutConfig","renderLayout","item","i","animationValue","common","styles","container","itemsVertical","itemsHorizontal","map","StyleSheet","create","overflow","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Animated, { runOnJS, useDerivedValue } from 'react-native-reanimated';\n\nimport { useCarouselController } from './hooks/useCarouselController';\nimport { useAutoPlay } from './hooks/useAutoPlay';\nimport { usePropsErrorBoundary } from './hooks/usePropsErrorBoundary';\nimport { ScrollViewGesture } from './ScrollViewGesture';\nimport { useVisibleRanges } from './hooks/useVisibleRanges';\n\nimport type { ICarouselInstance, TCarouselProps } from './types';\nimport { StyleSheet, View } from 'react-native';\nimport { BaseLayout } from './layouts/BaseLayout';\nimport { useLayoutConfig } from './hooks/useLayoutConfig';\nimport { useInitProps } from './hooks/useInitProps';\nimport { CTX } from './store';\nimport { useCommonVariables } from './hooks/useCommonVariables';\nimport { useOnProgressChange } from './hooks/useOnProgressChange';\nimport { computedRealIndexWithAutoFillData } from './utils/computedWithAutoFillData';\n\nconst Carousel = React.forwardRef<ICarouselInstance, TCarouselProps<any>>(\n    (_props, ref) => {\n        const props = useInitProps(_props);\n\n        const {\n            testID,\n            data,\n            rawData,\n            loop,\n            autoFillData,\n            mode,\n            style,\n            width,\n            height,\n            vertical,\n            autoPlay,\n            windowSize,\n            autoPlayReverse,\n            autoPlayInterval,\n            scrollAnimationDuration,\n            withAnimation,\n            renderItem,\n            onScrollEnd,\n            onSnapToItem,\n            onScrollBegin,\n            onProgressChange,\n            customAnimation,\n            defaultIndex,\n        } = props;\n\n        const commonVariables = useCommonVariables(props);\n        const { size, handlerOffsetX } = commonVariables;\n        const dataLength = data.length;\n\n        const offsetX = useDerivedValue(() => {\n            const totalSize = size * dataLength;\n            const x = handlerOffsetX.value % totalSize;\n\n            if (!loop) {\n                return handlerOffsetX.value;\n            }\n            return isNaN(x) ? 0 : x;\n        }, [loop, size, dataLength]);\n\n        usePropsErrorBoundary(props);\n        useOnProgressChange({\n            autoFillData,\n            loop,\n            size,\n            offsetX,\n            rawData,\n            onProgressChange,\n        });\n\n        const carouselController = useCarouselController({\n            loop,\n            size,\n            data,\n            autoFillData,\n            handlerOffsetX,\n            withAnimation,\n            defaultIndex,\n            onScrollEnd: () => runOnJS(_onScrollEnd)(),\n            onScrollBegin: () => !!onScrollBegin && runOnJS(onScrollBegin)(),\n            duration: scrollAnimationDuration,\n        });\n\n        const { next, prev, scrollTo, getSharedIndex, getCurrentIndex } =\n            carouselController;\n\n        const { start: startAutoPlay, pause: pauseAutoPlay } = useAutoPlay({\n            autoPlay,\n            autoPlayInterval,\n            autoPlayReverse,\n            carouselController,\n        });\n\n        const _onScrollEnd = React.useCallback(() => {\n            const _sharedIndex = Math.round(getSharedIndex());\n\n            const realIndex = computedRealIndexWithAutoFillData({\n                index: _sharedIndex,\n                dataLength: rawData.length,\n                loop,\n                autoFillData,\n            });\n\n            if (onSnapToItem) {\n                onSnapToItem(realIndex);\n            }\n            if (onScrollEnd) {\n                onScrollEnd(realIndex);\n            }\n        }, [\n            loop,\n            autoFillData,\n            rawData.length,\n            getSharedIndex,\n            onSnapToItem,\n            onScrollEnd,\n        ]);\n\n        const scrollViewGestureOnScrollBegin = React.useCallback(() => {\n            pauseAutoPlay();\n            onScrollBegin?.();\n        }, [onScrollBegin, pauseAutoPlay]);\n\n        const scrollViewGestureOnScrollEnd = React.useCallback(() => {\n            startAutoPlay();\n            _onScrollEnd();\n        }, [_onScrollEnd, startAutoPlay]);\n\n        const scrollViewGestureOnTouchBegin = React.useCallback(pauseAutoPlay, [\n            pauseAutoPlay,\n        ]);\n\n        const scrollViewGestureOnTouchEnd = React.useCallback(startAutoPlay, [\n            startAutoPlay,\n        ]);\n\n        React.useImperativeHandle(\n            ref,\n            () => ({\n                next,\n                prev,\n                getCurrentIndex,\n                scrollTo,\n            }),\n            [getCurrentIndex, next, prev, scrollTo]\n        );\n\n        const visibleRanges = useVisibleRanges({\n            total: data.length,\n            viewSize: size,\n            translation: handlerOffsetX,\n            windowSize,\n        });\n\n        const layoutConfig = useLayoutConfig({ ...props, size });\n\n        const renderLayout = React.useCallback(\n            (item: any, i: number) => {\n                const realIndex = computedRealIndexWithAutoFillData({\n                    index: i,\n                    dataLength: rawData.length,\n                    loop,\n                    autoFillData,\n                });\n\n                return (\n                    <BaseLayout\n                        key={i}\n                        index={i}\n                        handlerOffsetX={offsetX}\n                        visibleRanges={visibleRanges}\n                        animationStyle={customAnimation || layoutConfig}\n                    >\n                        {({ animationValue }) =>\n                            renderItem({\n                                item,\n                                index: realIndex,\n                                animationValue,\n                            })\n                        }\n                    </BaseLayout>\n                );\n            },\n            [\n                loop,\n                rawData,\n                offsetX,\n                visibleRanges,\n                autoFillData,\n                renderItem,\n                layoutConfig,\n                customAnimation,\n            ]\n        );\n\n        return (\n            <CTX.Provider value={{ props, common: commonVariables }}>\n                <View\n                    style={[\n                        styles.container,\n                        { width: width || '100%', height: height || '100%' },\n                        style,\n                    ]}\n                    testID={testID}\n                >\n                    <ScrollViewGesture\n                        size={size}\n                        translation={handlerOffsetX}\n                        onScrollBegin={scrollViewGestureOnScrollBegin}\n                        onScrollEnd={scrollViewGestureOnScrollEnd}\n                        onTouchBegin={scrollViewGestureOnTouchBegin}\n                        onTouchEnd={scrollViewGestureOnTouchEnd}\n                    >\n                        <Animated.View\n                            key={mode}\n                            style={[\n                                styles.container,\n                                {\n                                    width: width || '100%',\n                                    height: height || '100%',\n                                },\n                                style,\n                                vertical\n                                    ? styles.itemsVertical\n                                    : styles.itemsHorizontal,\n                            ]}\n                        >\n                            {data.map(renderLayout)}\n                        </Animated.View>\n                    </ScrollViewGesture>\n                </View>\n            </CTX.Provider>\n        );\n    }\n);\n\nexport default Carousel as <T extends any>(\n    props: React.PropsWithChildren<TCarouselProps<T>>\n) => React.ReactElement;\n\nconst styles = StyleSheet.create({\n    container: {\n        overflow: 'hidden',\n    },\n    itemsHorizontal: {\n        flexDirection: 'row',\n    },\n    itemsVertical: {\n        flexDirection: 'column',\n    },\n});\n"]}